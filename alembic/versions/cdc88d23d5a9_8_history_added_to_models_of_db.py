"""8_history added to models of db

Revision ID: cdc88d23d5a9
Revises: 83412d2310e6
Create Date: 2020-02-04 12:19:07.555023

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cdc88d23d5a9'
down_revision = '83412d2310e6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups_version',
    sa.Column('creation_date', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modification_date', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), autoincrement=False, nullable=True),
    sa.Column('creator', sa.String(), autoincrement=False, nullable=True),
    sa.Column('modifier', sa.String(), autoincrement=False, nullable=True),
    sa.Column('title', sa.String(), autoincrement=False, nullable=True),
    sa.Column('person_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_tb_groups_version'))
    )
    op.create_index(op.f('ix_tb_groups_version_col_end_transaction_id'), 'groups_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_tb_groups_version_col_operation_type'), 'groups_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_tb_groups_version_col_transaction_id'), 'groups_version', ['transaction_id'], unique=False)
    op.create_table('movies_version',
    sa.Column('creation_date', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modification_date', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), autoincrement=False, nullable=True),
    sa.Column('creator', sa.String(), autoincrement=False, nullable=True),
    sa.Column('modifier', sa.String(), autoincrement=False, nullable=True),
    sa.Column('title', sa.String(), autoincrement=False, nullable=True),
    sa.Column('description', sa.String(), autoincrement=False, nullable=True),
    sa.Column('director', sa.String(), autoincrement=False, nullable=True),
    sa.Column('writer', sa.String(), autoincrement=False, nullable=True),
    sa.Column('producer', sa.String(), autoincrement=False, nullable=True),
    sa.Column('images', sa.ARRAY(postgresql.UUID()), autoincrement=False, nullable=True),
    sa.Column('genre', sa.ARRAY(sa.String()), autoincrement=False, nullable=True),
    sa.Column('pub_year', sa.String(), autoincrement=False, nullable=True),
    sa.Column('order_filed', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_tb_movies_version'))
    )
    op.create_index(op.f('ix_tb_movies_version_col_end_transaction_id'), 'movies_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_tb_movies_version_col_operation_type'), 'movies_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_tb_movies_version_col_transaction_id'), 'movies_version', ['transaction_id'], unique=False)
    op.create_table('ratings_version',
    sa.Column('creation_date', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('modification_date', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), autoincrement=False, nullable=True),
    sa.Column('creator', sa.String(), autoincrement=False, nullable=True),
    sa.Column('modifier', sa.String(), autoincrement=False, nullable=True),
    sa.Column('movie_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('person_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('overall_rate', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.String(), autoincrement=False, nullable=True),
    sa.Column('novel', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('character', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('reason', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('directing', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('acting', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('editing', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('visualization', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('sound', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('music', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('violence_range', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('insulting_range', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('sexual_content', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('unsuitable_wearing', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('addiction_promotion', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('horror_content', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('suicide_encouragement', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('breaking_law_encouragement', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('gambling_promotion', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('alcoholic_promotion', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('family_subject', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('individual_social_behavior', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('feminism_exposure', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('justice_seeking', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('theism', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('bright_future_exposure', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('hope', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('iranian_life_style', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('true_vision_of_enemy', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('true_historiography', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('question_1', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_2', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_3', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_4', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_5', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_6', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_7', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_8', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_9', sa.String(), autoincrement=False, nullable=True),
    sa.Column('question_10', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_tb_ratings_version'))
    )
    op.create_index(op.f('ix_tb_ratings_version_col_end_transaction_id'), 'ratings_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_tb_ratings_version_col_operation_type'), 'ratings_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_tb_ratings_version_col_transaction_id'), 'ratings_version', ['transaction_id'], unique=False)
    op.create_table('transaction',
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('remote_addr', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_transaction'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction')
    op.drop_index(op.f('ix_tb_ratings_version_col_transaction_id'), table_name='ratings_version')
    op.drop_index(op.f('ix_tb_ratings_version_col_operation_type'), table_name='ratings_version')
    op.drop_index(op.f('ix_tb_ratings_version_col_end_transaction_id'), table_name='ratings_version')
    op.drop_table('ratings_version')
    op.drop_index(op.f('ix_tb_movies_version_col_transaction_id'), table_name='movies_version')
    op.drop_index(op.f('ix_tb_movies_version_col_operation_type'), table_name='movies_version')
    op.drop_index(op.f('ix_tb_movies_version_col_end_transaction_id'), table_name='movies_version')
    op.drop_table('movies_version')
    op.drop_index(op.f('ix_tb_groups_version_col_transaction_id'), table_name='groups_version')
    op.drop_index(op.f('ix_tb_groups_version_col_operation_type'), table_name='groups_version')
    op.drop_index(op.f('ix_tb_groups_version_col_end_transaction_id'), table_name='groups_version')
    op.drop_table('groups_version')
    # ### end Alembic commands ###
